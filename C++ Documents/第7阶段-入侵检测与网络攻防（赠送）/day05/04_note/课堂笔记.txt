1 防火墙iptables
    iptables -t filter -A INPUT -p tcp --dport 80 -j DROP
    往iptables中的 filter表 里的 INPUT 链 追加一条规则 ： 协议是TCP的，并且目的地址是80端口 就丢弃掉

    命令结构：
    iptables [-t table] COMMAND chain CRITERIA -j TARGET
        -t table 
            指定对哪个表进行操作，默认没有参数的情况系就是filter

        COMMAND  chain
            对某个链进行怎么样的操作
            -L [chain] --line-numbers
                查看表或者链中的规则

            -P [chain] <DROP|ACCEPT>
                控制某个链的默认的策略是 接受报文还是丢弃报文

            -A chain 规则
                往某个链里边去追加一条规则

            -D chain num
                删除某个链中的第几条规则

            -I chain num 规则
                往某个插入规则，插入到第num行

            -F [chain]
                清空某个链的规则，如果链的参数没有给定，那么就清空整个表

            -R chain num 新规则
                将某个链中的第几条规则替换成新的规则


        规则：   条件 + 动作
            动作 ： -j ACCEPT|DROP


            条件：
                -s 源ip地址
                    匹配ip报文源地址是某个IP

                -d 目的ip地址
                    匹配ip报文目的地址是某个IP

                -p <协议>
                    -p tcp|udp
                        扩展的选项，判断端口号
                        --dport 目标端口号
                        --sport 源端口号

                -i 网卡名
                    从哪个网卡流入的报文
                -o 网卡名
                    从哪个网卡流出的报文



2 ssh服务实验环境

    iptables 规则的判断顺序是从第一条开始一条条往下判断，如果条件匹配就执行对应的操作，不会再继续往下走
    
    一台对外开放的服务器 http服务器，拥有ssh服务，但是只对堡垒机开放



        http服务器: 192.168.177.196  metasploitabl

        堡垒机: 192.168.177.172  kali


            1 开放 80端口给所有请求
                iptables -t filter -A INPUT -p tcp --dport 80 -j ACCEPT
                iptables -t filter -A OUTPUT -p tcp --sport 80 -j ACCEPT


            2 开放 22 端口给堡垒机
                iptables -t filter -A INPUT -s 192.168.177.172 -p tcp --dport 22 -j ACCEPT
                iptables -t filter -A OUTPUT -d 192.168.177.172 -p tcp --sport 22 -j ACCEPT

            3 先禁止所有请求访问
                可以设置INPUT默认策略 为 DROP
                    iptables -t filter -P INPUT DROP
                    iptables -t filter -P OUTPUT DROP

                另一种就是
                    iptables -t filter -A INPUT -p tcp -j DROP
                    iptables -t filter -A INPUT -p udp -j DROP
                    iptables -t filter -A OUTPUT -p tcp -j DROP
                    iptables -t filter -A OUTPUT -p udp -j DROP


3 ping attack的防护
    ping -s 65000 ip
        这种方式触发的低级的Dos攻击会导致服务器损失网络流量资源以及cpu计算资源

    iptables -t filter -A INPUT -p icmp --icmp-type 8 -j DROP
        icmp 8号类型的请求其实就是 ping echo request , 直接决绝掉
    iptables -t filter -A OUTPUT -p icmp --icmp-type 0 -j DROP
        出去的报文如果是 icmp reply类型（0号） ，也要禁止

    也可以配置服务器，关闭ping的 echo报文的响应
    echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all 


4 iptables 规则导出和导入
    iptables-save > 文件名
        将iptables 的规则 导出到某个文件
        因为该命令默认输出到标准输出上，所以使用重定向的方式将标准输出转到文件

    iptabels-restore < 文件名

        从文件中恢复之前的iptables的规则设置


5 tcpwrapper
    轻量级的防火墙

    使用前提：
        服务可执行程序连接了 libwrap.so 动态库


    配置方式：
        /etc/hosts.allow
            sshd: 单个ip  192.168.1.0/24  alll
        /etc/hosts.deny


        如果allow和deny两个文件都填了相同的客户端，优先生效的是allow文件


6 安全审计
    是一种时候追踪技术，从内核中去监控用户的行为，记录用户的敏感操作
    并不是要将用户的所有操作都记录下来，只需要记录敏感的就行

    安装
    如果linux默认没有自带，那就自行安装 sudo apt install auditd
    sudo /etc/init.d/auditd start  启动审计服务
    ps aux | grep audit 能够看到 auditd 就行


    配置文件的使用
        /etc/audit/rules.d/audit.rules 
        注意不要修改 /etc/autdit/audit.rules ,该文件是最后生成的临时文件，每次重启服务都会重新生成一个

        -w <文件地址> -p <权限> -k <关键字>
            权限可以填以下这几个的组合
              r - 被读
              w - 被写
              x - 被执行
              a - 属性被修改 ，chmod 777 file

        关键字是方便管理日志，搜索日志用


    查看 /var/log/audit/audit.log 日志来确定用户的行为，例如：
    type=SYSCALL        日志类型
    msg=audit(1557131668.228:113):   包含了时间戳:事件id，同一个事件的log，id是一样
        arch=c000003e 
        pid=10835 进程号
        uid=0       用户id
        gid=0       组id
        tty=pts4    终端id， 多个用户如果同时ssh连接，每个ssh连接对应终端号不一样
        comm="bash" exe="/usr/bin/bash"   执行的命令以及命令的地址
        key="hello"            keyname 关键字 ..                                                  




    auditctl
        审计服务的核心控制命令，audit.rulese 就是要使用这个命令来加载配置规则

        auditctl -l 
            查看当前生效的规则
        auditctl -s
            查看审计服务的运行状态
        auditctl -D
            清空当前审计服务生效的规则

        auditctl -w 文件名..... -p 权限 -k 关键字...  
            添加一条审计规则


    ausearch
        依赖审计日志来进行日志查找

        o   ausearch -k xxxxkey : 查看关键字key相关的内容
        o   ausearch -f filename : 查看和文件相关内容。
        o   ausearch -ui uid : 查看某个用户id相关内容



    aureport
        依赖审计日志来产生一个报告，正常流程先查看报告，报告有问题再去查看具体日志
        o   aureport
        o   aureport -au # 和鉴权相关
        o   aureport -m # 和账户修改相关













