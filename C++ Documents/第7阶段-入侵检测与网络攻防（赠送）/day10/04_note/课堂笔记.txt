1 tftp的安装
    sudo apt-get install tftpd-hpa

    itcast@itcast-teacher:~$ sudo vi /etc/default/tftpd-hpa 

    TFTP_USERNAME="itcast"                使用什么用户来跑tftp服务，修改为你当前使用的用户 是 itcast还是root
    TFTP_DIRECTORY="/home/itcast/tftp/"   上传或者下载文件的时候将文件放到哪个目录,不像sftp能够cd修改目录，只能固定一个目录
    TFTP_ADDRESS=":69"                  服务绑定的地址，不需要修改，69端口
    TFTP_OPTIONS="-l -s -c"
            -l :以standalone/listen模式启动TFTP服务
            -c: 可创建新文件。默认情况下TFTP只允许覆盖原有文件而不能创建新文件
            -s : 改变TFTP启动的根目录，加了-s后，客户端使用TFTP时，不再需要输入指定目录，填写文件的文件路径，而是使用配置文件中写好的目录

    重启服务
    sudo /etc/init.d/tftpd-hpa restart


2 tftp 客户端的使用
    sudo apt install tftp
    tftp <ip地址>
        因为tftp是基于udp协议的，不存在连接的说法
        如果ip地址填错，是不会马上反馈
        进入tftp的命令提示，就可以输入tftp的命令

        put <文件名>
            将当前目录下的某个文件上传到tftp服务器上

        get <文件名>
            将远端目录下的某个文件下载到当前目录上

        ? 查看帮助

        connect <ip>
            变换服务器的地址

        verbose 打开更多详细信息的显式

        status 查看当前的状态

        trace 打开报文的追踪





3 tftp 协议
    
    请求类型报文 RRQ/WRQ

    •   RRQ/WRQ 数据包格式
        2 bytes    string   1 byte string 1 byte
        ------------------------------------------------
        | Opcode | Filename | 0 | Mode | 0 |
        ------------------------------------------------

        文件名是filename NETASCII码字符，以\0结束。
            如果是读请求，就表示要下载的文件名，如果是写请求，表示要上传的文件名

        而MODE域包括了字符串"netascii"，"octet"或"mail"，名称不分大小写。
            结束位置也是\0


        特征：
            opcode : 1|2
            最后几个字节肯定是   netascii | octet | mail   前后都夹着一个\0

            整个报文至少9个字节



    •   DATA 包
        2 bytes   2 bytes   n bytes
        ----------------------------------
        | Opcode | Block # | Data |
        ----------------------------------

        opcode : 3 
        block : 数据块，从1开始一直传输给对方，每个数据报文自增1 依次类推
        data : 存储文件具体数据的字段
            0-512个字节，如果该报文数据区域是512个字节，这不是最后一个报文
            如果文件刚好是512字节，1个报文就刚好把文件所有数据都发送完了，还要
            再次发送一个0字节的报文


        特征：
            opcode : 3
            长度: 4 - 516字节



    •   ACK包
        2 bytes 2 bytes
        ---------------------
        | Opcode | Block # |
        ---------------------
        操作码为4。其中的包号为要确认的数据包的包号。
        WRQ数据包被ACK数据包确认，WRQ数据包的包号为0。

        特征：
            opcode : 4
            长度恒为4 


    •   ERROR 包
        2 bytes       2 bytes string 1 byte
        -----------------------------------------
        | Opcode | ErrorCode | ErrMsg | 0 |
        -----------------------------------------
        一个ERROR包，它的操作码是5，它的格式如上所示。此包可以被其它任何类型的包确认。
        错误码(ErrorCode)
        Value Meaning

        0 未定义，请参阅错误信息（如果提示这种信息的话）
        1 文件未找到
        2 访问非法
        3 磁盘满或超过分配的配额
        4 非法的TFTP操作
        5 未知的传输ID
        6 文件已经存在
        7 没有类似的用户


        特征：
            opcode : 5
            errorcode : 0-7
            errMsg : 假设它可以不存在

            长度： >=5 字节



4 ntp的使用

    时区设置
    tzselect 选择合适的时区，最终应该是 要使用环境变量来设置时区

    export TZ='Asia/Shanghai'


    设置当前的时间为一个错误的时间
    sudo date -s 12:00:00
    如果是使用虚拟机的，那么要注意vmware中有一个选项是同步当前物理机时间，将选项去掉

    使用ntpdate同步时间
    sudo ntpdate -u ntp.api.bz


5 ntp 协议解析
    
    报文长度 要么 48字节 要么 60字节

    LI（Leap Indicator）：   2b
        长度为2比特，值为“11”时表示告警状态，时钟未被同步。为其他值时NTP本身不做处理。

        0-3都可以，不能作为判断依据

    VN（Version Number）：长度为3比特，表示NTP的版本号，目前的最新版本为4。  3b
        最新版本4 ，判断为4


    Mode：  3b
        长度为3比特，表示NTP的工作模式。
        不同的值所表示的含义分别是：0未定义、1表示主动对等体模式、
        2表示被动对等体模式、3表示客户模式、4表示服务器模式、
        5表示广播模式或组播模式、6表示此报文为NTP控制报文、7预留给内部使用。

        0-7都有可能，不能判断

    Stratum：   1byte
        系统时钟的层数，取值范围为1～16，它定义了时钟的准确度。
        层数为1的时钟准确度最高，准确度从1到16依次递减，
        层数为16的时钟处于未同步状态，不能作为参考时钟。
        取值范围0-16

    Poll：轮询时间，即两个连续NTP报文之间的时间间隔。
    Precision：系统时钟的精度。
    Root Delay：本地到主参考时钟源的往返时间。
    Root Dispersion：系统时钟相对于主参考时钟的最大误差。
    Reference Identifier：参考时钟源的标识。
    Reference Timestamp：系统时钟最后一次被设定或更新的时间。
    Originate Timestamp：NTP请求报文离开发送端时发送端的本地时间。
    Receive Timestamp：NTP请求报文到达接收端时接收端的本地时间。
    Transmit Timestamp：应答报文离开应答者时应答者的本地时间。
    Authenticator：验证信息(可以没有)。




